/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [6-1:0] M_aluadder_aluop;
  wire [8-1:0] M_aluadder_c;
  wire [8-1:0] M_aluadder_x;
  wire [8-1:0] M_aluadder_y;
  reg [22-1:0] M_aluadder_question;
  alu_2 aluadder (
    .clk(clk),
    .question(M_aluadder_question),
    .aluop(M_aluadder_aluop),
    .c(M_aluadder_c),
    .x(M_aluadder_x),
    .y(M_aluadder_y)
  );
  wire [8-1:0] M_test_correctanswer;
  wire [22-1:0] M_test_question;
  reg [5-1:0] M_test_walker;
  tester_3 test (
    .clk(clk),
    .walker(M_test_walker),
    .correctanswer(M_test_correctanswer),
    .question(M_test_question)
  );
  reg [4:0] M_checking_d, M_checking_q = 1'h0;
  reg [25:0] M_timer_d, M_timer_q = 1'h0;
  
  reg [21:0] question;
  
  always @* begin
    M_timer_d = M_timer_q;
    M_checking_d = M_checking_q;
    
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    io_led = 24'h000000;
    led = 8'h00;
    M_test_walker = M_checking_q;
    M_timer_d = 1'h0;
    if (io_dip[16+7+0-:1]) begin
      question[16+5-:6] = io_dip[16+0+5-:6];
      question[8+7-:8] = io_dip[8+7-:8];
      question[0+7-:8] = io_dip[0+7-:8];
      M_aluadder_question = question;
    end else begin
      M_timer_d = M_timer_q + 1'h1;
      M_aluadder_question = M_test_question;
      if (M_test_correctanswer == M_aluadder_c && M_timer_q == 1'h1 && M_checking_q <= 5'h1a) begin
        M_checking_d = M_checking_q + 1'h1;
        M_test_walker = M_checking_q;
      end
    end
    io_led[16+7-:8] = M_aluadder_c;
    io_led[8+7-:8] = M_aluadder_x;
    io_led[0+7-:8] = M_aluadder_y;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_seg = 8'hff;
    io_sel = 4'hf;
  end
  
  always @(posedge clk) begin
    M_checking_q <= M_checking_d;
    M_timer_q <= M_timer_d;
  end
  
endmodule
